function [Veh] = Vehicle_3A3_2_G_1_2_3_1_1(Veh)
% Vehicle_3A3_2_G_1_2_3_1_1
% Created: 08-Feb-2022 09:09:07
 
% -- Vehicle information --
% num_axles_per_body = [3  3  2];
% num_axles_per_group = [1  2  3  1  1];
% with_articulation = [1  0];
 
% -- Vehicle variables --
% Veh.Prop.mBi = [[mB1, mB2, mB3]]
% Veh.Prop.IBi = [[IB1, IB2, IB3]]
% Veh.Prop.kSj = [[kS1, kS2, kS3, kS4, kS5]]
% Veh.Prop.cSj = [[cS1, cS2, cS3, cS4, cS5]]
% Veh.Prop.mGj = [[mG1, mG2, mG3, mG4, mG5]]
% Veh.Prop.IGj = [[IG1, IG2, IG3, IG4, IG5]]
% Veh.Prop.kTk = [[kT1, kT2, kT3, kT4, kT5, kT6, kT7, kT8]]
% Veh.Prop.cTk = [[cT1, cT2, cT3, cT4, cT5, cT6, cT7, cT8]]
% Veh.Prop.ai = [[a1, a2, a3]]
% Veh.Prop.bi = [[b1, b2]]
% Veh.Prop.dj = [[d1, d2, d3, d4, d5]]
% Veh.Prop.ek = [[e1, e2, e3, e4, e5, e6, e7, e8]]
 
% -- Degrees of Freedom --
Veh.DOF(1).name = 'yB1'; Veh.DOF(1).type = 'displacement'; Veh.DOF(1).dependency = 'independent';
Veh.DOF(2).name = 'yB3'; Veh.DOF(2).type = 'displacement'; Veh.DOF(2).dependency = 'independent';
Veh.DOF(3).name = 'thetaB1'; Veh.DOF(3).type = 'rotation'; Veh.DOF(3).dependency = 'independent';
Veh.DOF(4).name = 'thetaB2'; Veh.DOF(4).type = 'rotation'; Veh.DOF(4).dependency = 'independent';
Veh.DOF(5).name = 'thetaB3'; Veh.DOF(5).type = 'rotation'; Veh.DOF(5).dependency = 'independent';
Veh.DOF(6).name = 'yG1'; Veh.DOF(6).type = 'displacement'; Veh.DOF(6).dependency = 'independent';
Veh.DOF(7).name = 'yG2'; Veh.DOF(7).type = 'displacement'; Veh.DOF(7).dependency = 'independent';
Veh.DOF(8).name = 'yG3'; Veh.DOF(8).type = 'displacement'; Veh.DOF(8).dependency = 'independent';
Veh.DOF(9).name = 'yG4'; Veh.DOF(9).type = 'displacement'; Veh.DOF(9).dependency = 'independent';
Veh.DOF(10).name = 'yG5'; Veh.DOF(10).type = 'displacement'; Veh.DOF(10).dependency = 'independent';
Veh.DOF(11).name = 'thetaG2'; Veh.DOF(11).type = 'rotation'; Veh.DOF(11).dependency = 'independent';
Veh.DOF(12).name = 'thetaG3'; Veh.DOF(12).type = 'rotation'; Veh.DOF(12).dependency = 'independent';
Veh.DOF(1).num_independent = 12;
 
% -- DOF relations -- 
Veh.DOF(13).name = 'yB2'; Veh.DOF(13).type = 'displacement'; Veh.DOF(13).dependency = 'dependent';
Veh.DOF(13).expression = 'yB2 = yB1 + a2*thetaB2 + b1*thetaB1';
Veh.DOF(13).fun = @(y) y(1) + Veh.Prop.ai(2)*y(4) + Veh.Prop.bi(1)*y(3);
Veh.DOF(1).num_dependent = 1;
 
% -- Axle spacing and distance --
Veh.Prop.ax_sp = [0, Veh.Prop.dj(2) - Veh.Prop.dj(1) - Veh.Prop.ek(1) + Veh.Prop.ek(2), Veh.Prop.ek(3) - Veh.Prop.ek(2), Veh.Prop.ai(2) + Veh.Prop.bi(1) - Veh.Prop.dj(2) + Veh.Prop.dj(3) - Veh.Prop.ek(3) + Veh.Prop.ek(4), Veh.Prop.ek(5) - Veh.Prop.ek(4), Veh.Prop.ek(6) - Veh.Prop.ek(5), Veh.Prop.ai(3) + Veh.Prop.bi(2) - Veh.Prop.dj(3) + Veh.Prop.dj(4) - Veh.Prop.ek(6) + Veh.Prop.ek(7), Veh.Prop.dj(5) - Veh.Prop.dj(4) - Veh.Prop.ek(7) + Veh.Prop.ek(8)];
Veh.Prop.ax_dist = [0, Veh.Prop.dj(2) - Veh.Prop.dj(1) - Veh.Prop.ek(1) + Veh.Prop.ek(2), Veh.Prop.dj(2) - Veh.Prop.dj(1) - Veh.Prop.ek(1) + Veh.Prop.ek(3), Veh.Prop.ai(2) + Veh.Prop.bi(1) - Veh.Prop.dj(1) + Veh.Prop.dj(3) - Veh.Prop.ek(1) + Veh.Prop.ek(4), Veh.Prop.ai(2) + Veh.Prop.bi(1) - Veh.Prop.dj(1) + Veh.Prop.dj(3) - Veh.Prop.ek(1) + Veh.Prop.ek(5), Veh.Prop.ai(2) + Veh.Prop.bi(1) - Veh.Prop.dj(1) + Veh.Prop.dj(3) - Veh.Prop.ek(1) + Veh.Prop.ek(6), Veh.Prop.ai(2) + Veh.Prop.ai(3) + Veh.Prop.bi(1) + Veh.Prop.bi(2) - Veh.Prop.dj(1) + Veh.Prop.dj(4) - Veh.Prop.ek(1) + Veh.Prop.ek(7), Veh.Prop.ai(2) + Veh.Prop.ai(3) + Veh.Prop.bi(1) + Veh.Prop.bi(2) - Veh.Prop.dj(1) + Veh.Prop.dj(5) - Veh.Prop.ek(1) + Veh.Prop.ek(8)];
 
% -- Vehicle system matrices --
Veh.SysM.M = ...
    [[Veh.Prop.mBi(1) + Veh.Prop.mBi(2), 0, Veh.Prop.bi(1)*Veh.Prop.mBi(2), Veh.Prop.ai(2)*Veh.Prop.mBi(2), 0, 0, 0, 0, 0, 0, 0, 0]; ...
    [0, Veh.Prop.mBi(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; ...
    [Veh.Prop.bi(1)*Veh.Prop.mBi(2), 0, Veh.Prop.IBi(1) + Veh.Prop.bi(1)^2*Veh.Prop.mBi(2), Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.mBi(2), 0, 0, 0, 0, 0, 0, 0, 0]; ...
    [Veh.Prop.ai(2)*Veh.Prop.mBi(2), 0, Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.mBi(2), Veh.Prop.IBi(2) + Veh.Prop.ai(2)^2*Veh.Prop.mBi(2), 0, 0, 0, 0, 0, 0, 0, 0]; ...
    [0, 0, 0, 0, Veh.Prop.IBi(3), 0, 0, 0, 0, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, Veh.Prop.mGj(1), 0, 0, 0, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, Veh.Prop.mGj(2), 0, 0, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, Veh.Prop.mGj(3), 0, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, Veh.Prop.mGj(4), 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, Veh.Prop.mGj(5), 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Veh.Prop.IGj(2), 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Veh.Prop.IGj(3)]];
 
Veh.SysM.C = ...
    [[Veh.Prop.cSj(1) + Veh.Prop.cSj(2) + Veh.Prop.cSj(3), 0, Veh.Prop.bi(1)*Veh.Prop.cSj(3) + Veh.Prop.cSj(1)*Veh.Prop.dj(1) + Veh.Prop.cSj(2)*Veh.Prop.dj(2), Veh.Prop.ai(2)*Veh.Prop.cSj(3) + Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, -Veh.Prop.cSj(1), -Veh.Prop.cSj(2), -Veh.Prop.cSj(3), 0, 0, 0, 0]; ...
    [0, Veh.Prop.cSj(4) + Veh.Prop.cSj(5), 0, 0, Veh.Prop.cSj(4)*Veh.Prop.dj(4) + Veh.Prop.cSj(5)*Veh.Prop.dj(5), 0, 0, 0, -Veh.Prop.cSj(4), -Veh.Prop.cSj(5), 0, 0]; ...
    [Veh.Prop.bi(1)*Veh.Prop.cSj(3) + Veh.Prop.cSj(1)*Veh.Prop.dj(1) + Veh.Prop.cSj(2)*Veh.Prop.dj(2), 0, Veh.Prop.bi(1)^2*Veh.Prop.cSj(3) + Veh.Prop.cSj(1)*Veh.Prop.dj(1)^2 + Veh.Prop.cSj(2)*Veh.Prop.dj(2)^2, Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.cSj(3) + Veh.Prop.bi(1)*Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, -Veh.Prop.cSj(1)*Veh.Prop.dj(1), -Veh.Prop.cSj(2)*Veh.Prop.dj(2), -Veh.Prop.bi(1)*Veh.Prop.cSj(3), 0, 0, 0, 0]; ...
    [Veh.Prop.ai(2)*Veh.Prop.cSj(3) + Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.cSj(3) + Veh.Prop.bi(1)*Veh.Prop.cSj(3)*Veh.Prop.dj(3), Veh.Prop.ai(2)^2*Veh.Prop.cSj(3) + Veh.Prop.cSj(3)*Veh.Prop.dj(3)^2 + 2*Veh.Prop.ai(2)*Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, 0, 0, - Veh.Prop.ai(2)*Veh.Prop.cSj(3) - Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, 0, 0, 0]; ...
    [0, Veh.Prop.cSj(4)*Veh.Prop.dj(4) + Veh.Prop.cSj(5)*Veh.Prop.dj(5), 0, 0, Veh.Prop.cSj(4)*Veh.Prop.dj(4)^2 + Veh.Prop.cSj(5)*Veh.Prop.dj(5)^2, 0, 0, 0, -Veh.Prop.cSj(4)*Veh.Prop.dj(4), -Veh.Prop.cSj(5)*Veh.Prop.dj(5), 0, 0]; ...
    [-Veh.Prop.cSj(1), 0, -Veh.Prop.cSj(1)*Veh.Prop.dj(1), 0, 0, Veh.Prop.cSj(1) + Veh.Prop.cTk(1), 0, 0, 0, 0, 0, 0]; ...
    [-Veh.Prop.cSj(2), 0, -Veh.Prop.cSj(2)*Veh.Prop.dj(2), 0, 0, 0, Veh.Prop.cSj(2) + Veh.Prop.cTk(2) + Veh.Prop.cTk(3), 0, 0, 0, Veh.Prop.cTk(2)*Veh.Prop.ek(2) + Veh.Prop.cTk(3)*Veh.Prop.ek(3), 0]; ...
    [-Veh.Prop.cSj(3), 0, -Veh.Prop.bi(1)*Veh.Prop.cSj(3), - Veh.Prop.ai(2)*Veh.Prop.cSj(3) - Veh.Prop.cSj(3)*Veh.Prop.dj(3), 0, 0, 0, Veh.Prop.cSj(3) + Veh.Prop.cTk(4) + Veh.Prop.cTk(5) + Veh.Prop.cTk(6), 0, 0, 0, Veh.Prop.cTk(4)*Veh.Prop.ek(4) + Veh.Prop.cTk(5)*Veh.Prop.ek(5) + Veh.Prop.cTk(6)*Veh.Prop.ek(6)]; ...
    [0, -Veh.Prop.cSj(4), 0, 0, -Veh.Prop.cSj(4)*Veh.Prop.dj(4), 0, 0, 0, Veh.Prop.cSj(4) + Veh.Prop.cTk(7), 0, 0, 0]; ...
    [0, -Veh.Prop.cSj(5), 0, 0, -Veh.Prop.cSj(5)*Veh.Prop.dj(5), 0, 0, 0, 0, Veh.Prop.cSj(5) + Veh.Prop.cTk(8), 0, 0]; ...
    [0, 0, 0, 0, 0, 0, Veh.Prop.cTk(2)*Veh.Prop.ek(2) + Veh.Prop.cTk(3)*Veh.Prop.ek(3), 0, 0, 0, Veh.Prop.cTk(2)*Veh.Prop.ek(2)^2 + Veh.Prop.cTk(3)*Veh.Prop.ek(3)^2, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, Veh.Prop.cTk(4)*Veh.Prop.ek(4) + Veh.Prop.cTk(5)*Veh.Prop.ek(5) + Veh.Prop.cTk(6)*Veh.Prop.ek(6), 0, 0, 0, Veh.Prop.cTk(4)*Veh.Prop.ek(4)^2 + Veh.Prop.cTk(5)*Veh.Prop.ek(5)^2 + Veh.Prop.cTk(6)*Veh.Prop.ek(6)^2]];
 
Veh.SysM.K = ...
    [[Veh.Prop.kSj(1) + Veh.Prop.kSj(2) + Veh.Prop.kSj(3), 0, Veh.Prop.bi(1)*Veh.Prop.kSj(3) + Veh.Prop.dj(1)*Veh.Prop.kSj(1) + Veh.Prop.dj(2)*Veh.Prop.kSj(2), Veh.Prop.ai(2)*Veh.Prop.kSj(3) + Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, -Veh.Prop.kSj(1), -Veh.Prop.kSj(2), -Veh.Prop.kSj(3), 0, 0, 0, 0]; ...
    [0, Veh.Prop.kSj(4) + Veh.Prop.kSj(5), 0, 0, Veh.Prop.dj(4)*Veh.Prop.kSj(4) + Veh.Prop.dj(5)*Veh.Prop.kSj(5), 0, 0, 0, -Veh.Prop.kSj(4), -Veh.Prop.kSj(5), 0, 0]; ...
    [Veh.Prop.bi(1)*Veh.Prop.kSj(3) + Veh.Prop.dj(1)*Veh.Prop.kSj(1) + Veh.Prop.dj(2)*Veh.Prop.kSj(2), 0, Veh.Prop.bi(1)^2*Veh.Prop.kSj(3) + Veh.Prop.dj(1)^2*Veh.Prop.kSj(1) + Veh.Prop.dj(2)^2*Veh.Prop.kSj(2), Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.kSj(3) + Veh.Prop.bi(1)*Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, -Veh.Prop.dj(1)*Veh.Prop.kSj(1), -Veh.Prop.dj(2)*Veh.Prop.kSj(2), -Veh.Prop.bi(1)*Veh.Prop.kSj(3), 0, 0, 0, 0]; ...
    [Veh.Prop.ai(2)*Veh.Prop.kSj(3) + Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, Veh.Prop.ai(2)*Veh.Prop.bi(1)*Veh.Prop.kSj(3) + Veh.Prop.bi(1)*Veh.Prop.dj(3)*Veh.Prop.kSj(3), Veh.Prop.ai(2)^2*Veh.Prop.kSj(3) + Veh.Prop.dj(3)^2*Veh.Prop.kSj(3) + 2*Veh.Prop.ai(2)*Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, 0, 0, - Veh.Prop.ai(2)*Veh.Prop.kSj(3) - Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, 0, 0, 0]; ...
    [0, Veh.Prop.dj(4)*Veh.Prop.kSj(4) + Veh.Prop.dj(5)*Veh.Prop.kSj(5), 0, 0, Veh.Prop.dj(4)^2*Veh.Prop.kSj(4) + Veh.Prop.dj(5)^2*Veh.Prop.kSj(5), 0, 0, 0, -Veh.Prop.dj(4)*Veh.Prop.kSj(4), -Veh.Prop.dj(5)*Veh.Prop.kSj(5), 0, 0]; ...
    [-Veh.Prop.kSj(1), 0, -Veh.Prop.dj(1)*Veh.Prop.kSj(1), 0, 0, Veh.Prop.kSj(1) + Veh.Prop.kTk(1), 0, 0, 0, 0, 0, 0]; ...
    [-Veh.Prop.kSj(2), 0, -Veh.Prop.dj(2)*Veh.Prop.kSj(2), 0, 0, 0, Veh.Prop.kSj(2) + Veh.Prop.kTk(2) + Veh.Prop.kTk(3), 0, 0, 0, Veh.Prop.ek(2)*Veh.Prop.kTk(2) + Veh.Prop.ek(3)*Veh.Prop.kTk(3), 0]; ...
    [-Veh.Prop.kSj(3), 0, -Veh.Prop.bi(1)*Veh.Prop.kSj(3), - Veh.Prop.ai(2)*Veh.Prop.kSj(3) - Veh.Prop.dj(3)*Veh.Prop.kSj(3), 0, 0, 0, Veh.Prop.kSj(3) + Veh.Prop.kTk(4) + Veh.Prop.kTk(5) + Veh.Prop.kTk(6), 0, 0, 0, Veh.Prop.ek(4)*Veh.Prop.kTk(4) + Veh.Prop.ek(5)*Veh.Prop.kTk(5) + Veh.Prop.ek(6)*Veh.Prop.kTk(6)]; ...
    [0, -Veh.Prop.kSj(4), 0, 0, -Veh.Prop.dj(4)*Veh.Prop.kSj(4), 0, 0, 0, Veh.Prop.kSj(4) + Veh.Prop.kTk(7), 0, 0, 0]; ...
    [0, -Veh.Prop.kSj(5), 0, 0, -Veh.Prop.dj(5)*Veh.Prop.kSj(5), 0, 0, 0, 0, Veh.Prop.kSj(5) + Veh.Prop.kTk(8), 0, 0]; ...
    [0, 0, 0, 0, 0, 0, Veh.Prop.ek(2)*Veh.Prop.kTk(2) + Veh.Prop.ek(3)*Veh.Prop.kTk(3), 0, 0, 0, Veh.Prop.ek(2)^2*Veh.Prop.kTk(2) + Veh.Prop.ek(3)^2*Veh.Prop.kTk(3), 0]; ...
    [0, 0, 0, 0, 0, 0, 0, Veh.Prop.ek(4)*Veh.Prop.kTk(4) + Veh.Prop.ek(5)*Veh.Prop.kTk(5) + Veh.Prop.ek(6)*Veh.Prop.kTk(6), 0, 0, 0, Veh.Prop.ek(4)^2*Veh.Prop.kTk(4) + Veh.Prop.ek(5)^2*Veh.Prop.kTk(5) + Veh.Prop.ek(6)^2*Veh.Prop.kTk(6)]];
 
% -- Force vector to calculate static response --
% Note: When using this vector, multiply it by the gravity. Following the sign criteria defined here
%   gravity has negative value. The numerical value to use is grav = -9.81 m/s^2
Veh.Static.F_vector_no_grav = [Veh.Prop.mBi(1) + Veh.Prop.mBi(2), Veh.Prop.mBi(3), Veh.Prop.bi(1)*Veh.Prop.mBi(2), Veh.Prop.ai(2)*Veh.Prop.mBi(2), 0, Veh.Prop.mGj(1), Veh.Prop.mGj(2), Veh.Prop.mGj(3), Veh.Prop.mGj(4), Veh.Prop.mGj(5), 0, 0];
 
% -- Nodal disp. to wheel disp. relation --
Veh.SysM.N2w = ...
    [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, Veh.Prop.ek(2), 0]; ...
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, Veh.Prop.ek(3), 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, Veh.Prop.ek(4)]; ...
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, Veh.Prop.ek(5)]; ...
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, Veh.Prop.ek(6)]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]; ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]];
 
% -- Contact Force calculation matrices --
Veh.Contact.expression_txt = 'F_contact = Fk*(wk-rk) + Fc*(wk_d-rk_d)';
% where 
%     wk = Vertical displacement of wheel
%     rk = Profile elevation
%     wk_d = First time derivative of vertical displacement of wheel
%     rk_d = First time derivative of profile elevation
 
Veh.Contact.Fk = ...
    [[0, 0, 0, 0, 0, 0, 0, 0]; ...
    [Veh.Prop.kTk(1), 0, 0, 0, 0, 0, 0, 0]; ...
    [0, Veh.Prop.kTk(2), Veh.Prop.kTk(3), 0, 0, 0, 0, 0]; ...
    [0, 0, 0, Veh.Prop.kTk(4), Veh.Prop.kTk(5), Veh.Prop.kTk(6), 0, 0]; ...
    [0, 0, 0, 0, 0, 0, Veh.Prop.kTk(7), 0]; ...
    [0, 0, 0, 0, 0, 0, 0, Veh.Prop.kTk(8)]; ...
    [0, Veh.Prop.ek(2)*Veh.Prop.kTk(2), Veh.Prop.ek(3)*Veh.Prop.kTk(3), 0, 0, 0, 0, 0]; ...
    [0, 0, 0, Veh.Prop.ek(4)*Veh.Prop.kTk(4), Veh.Prop.ek(5)*Veh.Prop.kTk(5), Veh.Prop.ek(6)*Veh.Prop.kTk(6), 0, 0]];
 
Veh.Contact.Fc = ...
    [[0, 0, 0, 0, 0, 0, 0, 0]; ...
    [Veh.Prop.cTk(1), 0, 0, 0, 0, 0, 0, 0]; ...
    [0, Veh.Prop.cTk(2), Veh.Prop.cTk(3), 0, 0, 0, 0, 0]; ...
    [0, 0, 0, Veh.Prop.cTk(4), Veh.Prop.cTk(5), Veh.Prop.cTk(6), 0, 0]; ...
    [0, 0, 0, 0, 0, 0, Veh.Prop.cTk(7), 0]; ...
    [0, 0, 0, 0, 0, 0, 0, Veh.Prop.cTk(8)]; ...
    [0, Veh.Prop.cTk(2)*Veh.Prop.ek(2), Veh.Prop.cTk(3)*Veh.Prop.ek(3), 0, 0, 0, 0, 0]; ...
    [0, 0, 0, Veh.Prop.cTk(4)*Veh.Prop.ek(4), Veh.Prop.cTk(5)*Veh.Prop.ek(5), Veh.Prop.cTk(6)*Veh.Prop.ek(6), 0, 0]];
 
% ---- End of function ----